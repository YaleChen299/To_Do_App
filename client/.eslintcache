[{"/mnt/c/appdev/to-do/client/src/reportWebVitals.js":"1","/mnt/c/appdev/to-do/client/src/App.js":"2","/mnt/c/appdev/to-do/client/src/index.js":"3","/mnt/c/appdev/to-do/client/src/components/TaskList.js":"4","/mnt/c/appdev/to-do/client/src/components/TaskItem.js":"5"},{"size":362,"mtime":1610902637851,"results":"6","hashOfConfig":"7"},{"size":580,"mtime":1611464319212,"results":"8","hashOfConfig":"7"},{"size":455,"mtime":1611239205559,"results":"9","hashOfConfig":"7"},{"size":1394,"mtime":1611433546666,"results":"10","hashOfConfig":"7"},{"size":1751,"mtime":1611418269195,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1a8vhrf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/appdev/to-do/client/src/reportWebVitals.js",[],["25","26"],"/mnt/c/appdev/to-do/client/src/App.js",[],"/mnt/c/appdev/to-do/client/src/index.js",[],["27","28"],"/mnt/c/appdev/to-do/client/src/components/TaskList.js",["29"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport TaskItem from './TaskItem';\r\n\r\nconst ListContainer = styled.div`\r\n    width: 70%;\r\n`;\r\n\r\n\r\nexport default function TaskList(props) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        fetch(props.url)\r\n            .then(res=>res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setTasks(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    },[]);\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <ListContainer>\r\n                    {tasks.map((t, i) => {\r\n                    return (\r\n                        <TaskItem \r\n                            key={i}\r\n                            title = {t.title}\r\n                            detail = {t.detail}\r\n                            tag = {t.tag}\r\n                        />\r\n                    )\r\n                })}\r\n            </ListContainer>\r\n        );\r\n    }\r\n    \r\n}","/mnt/c/appdev/to-do/client/src/components/TaskItem.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"34"},{"ruleId":"32","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":30,"column":7,"nodeType":"38","endLine":30,"endColumn":9,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.url'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [props.url]",{"range":"45","text":"46"},[774,776],"[props.url]"]